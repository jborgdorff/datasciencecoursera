install.packages("KernSmooth")
library(KernSmooth)
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x <- 1:4
y <- 2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10] == 4
x
x[x>10] <- 4
x
library(readr)
hw1_data <- read_csv("datasciencecoursera/hw1_data.csv")
View(hw1_data)
read.csv(hw1_data.csv)
read.table(hw1_data)
x <- read.csv("hw1_data.csv")
x <- read.csv("hw1_data.csv")
View(hw1_data)
View(hw1_data)
View(hw1_data)
x
x <- read.csv(hw1_data-2.csv)
x <- read.csv("hw1_data-2.csv")
getwd()
setwd("~/datasciencecoursera")
x <- read.csv("hw1_data-2.csv")
a <- x["Ozone"]
b <- a[!is.na(a)]
b <- !is.na(a) & a > 31
View(b)
a <- x["Temp"]
b <- !is.na(a) & a > 90
> a <- x["Ozone"]
> b <- a[!is.na(a)]
> b <- !is.na(a) & a > 31
a <- x["Ozone"]
b <- !is.na(a) & a > 31
a <- x["Temp"]
c <- !is.na(a) & a > 90
TRUE + TRUE
d == b+c
d <- b+c
[d = 0 | d = 1] <- FALSE
d[d = 0 | d = 1] <- FALSE
d[d=0] <- FALSE
d[d=1] <- TRUE
d[d=1] <- FALSE
IF b+c == 2 THEN d == TRUE
a <- x["Ozone", "Temp"]
a <- c(x["Ozone"],x["Temp"])
View(a)
?"if"
d <- b+c
if(d == 2) d <- TRUE else d <- FALSE
d <- b+c
ifelse(d == 2, TRUE, FALSE)
f <- ifelse(d == 2, TRUE, FALSE)
g <- x[f]
g
g <- x[f,]
g
h <- g["Solar.R"]
h
mean(h)
class(h)
mean("solar.R")
mean(h["solar.R"])
View(h)
mean(h)
mean(x)
h <- g[["Solar.R"]]
class(h)
mean(h)
a <- x["Month"]
b <- ifelse(a == 6, T,F)
View(a)
View(b)
c <- x[b,]
d <- c[["Temp"]]
mean(d)
b <- ifelse(a == 5, T,F)
c <- x[b,]
View(x)
d <- c[["Ozone"]]
max(d)
e <- d[!is.na(d)]
max(e)
x <- 1:4
y <- 2:3
z <- x+y
z
class(z)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1:4) + c(0,10)
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path(folder1, folder2)
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", recursive = T)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10,
| length=30)
my_seq <- seq(5, 10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Joris")
my_name
paste(my_name, collapse = " ")
paste("Hello", "World", sep = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3),c("X", "Y", "Z"))
paste(c(1:3),c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
3*z
3*x
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2 NA)
vect2 <- c(11,2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect)
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <-
| c(4, 5).
dim(my_vector) <-
c(4, 5).
dim(my_vector) <- c(4, 5).
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_v)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data)
colnames(my_data) <- cnames
my_da
my_data
swirl()
T == T
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
67 < 7
6 <7
10 <= 10
5 != 7
5 !=7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,
| FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(c(TRUE, FALSE, TRUE))
which(ints > 7)
any(ints < 0)
all(ints >0)
Sys.Date()
mean(c(2,4,5))
submit()
function(x){}
function(x){
x
}
y <- function(x){
x
}
y
submit()
boring_function <- function(x) {
x
}
submit()
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[3]},c(8, 4, 0))
evaluate(function(x){x[length(x)]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Utrecht")
submit()
submit()
mad_libs(place = "Utrecht", adjective = "beautiful", noun = "obstacle")
submit()
'I' %p% 'love' %p% 'R!'
?
info()
bye()
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t1)
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$MIN
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <-strptime(t3, "%B %d, %Y %H:%M")
t43
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
?source
source("specdata")
